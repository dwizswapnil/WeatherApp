{"version":3,"sources":["components/Forecast.js","components/WeatherCardSubheader.js","components/WeatherCard.js","components/Weather.js","components/WeatherSearch.js","use-debounce.js","components/AppLayout.js","components/App.js","index.js"],"names":["useStyles","makeStyles","theme","wi","color","Forecast","props","classes","result","forecast","map","item","index","icon","weatherIcons","icon_id","ListItem","className","ListItemText","primary","dayjs","dt_txt","format","style","flex","textAlign","IconButton","disabled","aria-label","fontSize","Typography","variant","component","Math","round","min","max","List","WeatherCardSubHeader","currentWeather","date","isValid","description","replace","txt","charAt","toUpperCase","substr","toLowerCase","atmospheric","padding","card","minWidth","minHeight","recommendation","fontFamily","WeatherCard","Card","CardHeader","title","city","country","subheader","WeatherCardSubheader","CardContent","CardMedia","src","float","paddingTop","temperature","gutterBottom","wind_speed","humidity","Divider","layout","marginTop","AppLayout","Container","Grid","container","spacing","xs","error","search","WeatherSearch","onCityChange","useState","searchTerm","setSearchTerm","isSearching","setSearching","debouncedSearchTerm","value","delay","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","hasError","alignItems","FormControl","InputLabel","htmlFor","Input","id","role","type","onChange","event","target","startAdornment","InputAdornment","position","Tooltip","endAdornment","CircularProgress","size","recommendations","Weather","mapDataToWeatherInterface","data","mapped","name","sys","dt","main","weather","temp","wind","speed","temp_min","temp_max","Object","keys","forEach","key","undefined","handleResponse","response","ok","json","Error","statusText","createMuiTheme","typography","join","h5","fontWeight","App","setCity","setError","setCurrentWeather","setForecast","fetch","process","then","res","entries","length","getWeather","catch","err","message","i","list","push","getForecast","ThemeProvider","CssBaseline","maxWidth","height","display","flexDirection","justifyContent","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ea4a9f83.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n    IconButton,\n    List,\n    ListItem,\n    ListItemText,\n    Typography,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport dayjs from \"dayjs\";\nimport * as weatherIcons from \"../icons\";\n\nconst useStyles = makeStyles((theme) => ({\n    wi: {\n        color: \"#673ab7\",\n    },\n}));\n\n//NOTE: separate the IconButton Component into it's own component & span into it's own component from temp & humidity, take care of all the props required\n\nconst Forecast = props => {\n    const classes = useStyles();\n    const prefix = \"wi wi-\";\n    const { forecast } = props;\n\n    const result = forecast.map((item, index) => {\n        const icon = prefix + weatherIcons.default[item.icon_id].icon;\n        return (\n            <ListItem key={index} className=\"forecastItem\">\n                <ListItemText\n                    className=\"week-day\"\n                    primary={dayjs(item.dt_txt).format(\"dddd\")}\n                    style={{ flex: \"1 1 0%\", textAlign: \"left\" }}\n                ></ListItemText>\n                <IconButton disabled={true} aria-label=\"forecast icon\">\n                    <span\n                        className={`${classes.wi} ${icon}`}\n                        style={{ fontSize: \"24px\" }}\n                    ></span>\n                </IconButton>\n                <span\n                    className=\"temp\"\n                    style={{ flex: \"1 1 0%\", textAlign: \"right\" }}\n                >\n                    <Typography\n                        variant=\"body2\"\n                        component=\"span\"\n                        color=\"textPrimary\"\n                    >\n                        {Math.round(item.min)}&deg; /{\" \"}\n                    </Typography>\n                    <Typography\n                        variant=\"body2\"\n                        component=\"span\"\n                        color=\"textSecondary\"\n                    >\n                        {Math.round(item.max)}&deg;\n                    </Typography>\n                </span>\n            </ListItem>\n        );\n    });\n\n    //NOTE: putting all the list items into a list finally\n    return <List aria-label=\"forecast data\">{result}</List>;\n}\n\nexport default Forecast;\n","import React from \"react\";\nimport dayjs from \"dayjs\";\n\nconst WeatherCardSubHeader = props => {\n    const { currentWeather } = props;\n    const date = dayjs().isValid(currentWeather.date) ? currentWeather.date : \"\";\n    const description = currentWeather.description\n        ? currentWeather.description\n        : \"\";\n\n    return (\n        <>\n            <span>\n                {dayjs(date).format(\"dddd\")}, {dayjs(date).format(\"h:mm\")}{\" \"}\n                {dayjs(date).format(\"A\")},{\" \"}\n                {description.replace(/\\w\\S*/g, txt => {\n                    return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n                })}\n            </span>\n        </>\n    );\n}\n\nexport default WeatherCardSubHeader;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n    Card,\n    CardContent,\n    CardHeader,\n    CardMedia,\n    Divider,\n    Typography,\n} from \"@material-ui/core\";\n\nimport Forecast from \"./Forecast\";\nimport WeatherCardSubheader from \"./WeatherCardSubheader\";\n\nconst useStyles = makeStyles((theme) => ({\n    atmospheric: {\n        fontSize: \"28px\",\n        padding: \"5px\",\n    },\n    card: {\n        minWidth: 400,\n        minHeight: 400,\n    },\n    recommendation: {\n        fontFamily: \"Montserrat, sans-serif\",\n        padding: \"20px 0px 10px 0px\",\n        fontSize: \"26px\",\n        textAlign: \"center\",\n    },\n    wi: {\n        color: \"#673ab7\",\n    },\n}));\n\n//NOTE: separate the CardHeader component, CardContent Component into their own separate components, take care of all the props required.\n\nconst WeatherCard = props => {\n    const classes = useStyles();\n    const humidity = \"wi wi-humidity\";\n    const strongWind = \"wi wi-strong-wind\";\n    const { currentWeather, forecast, icon, recommendation } = props;\n\n    return (\n        <Card className={classes.card}>\n            <CardHeader\n                title={currentWeather.city + \", \" + currentWeather.country}\n                subheader={\n                    <WeatherCardSubheader currentWeather={currentWeather} />\n                }\n            />\n            <CardContent>\n                <CardMedia\n                    className={`${icon} ${classes.wi}`}\n                    src={icon}\n                    style={{ fontSize: \"128px\", float: \"right\" }}\n                />\n                <Typography\n                    variant=\"h2\"\n                    className=\"big-temp\"\n                    color=\"textPrimary\"\n                    component=\"h2\"\n                    style={{ fontFamily: \"Montserrat\", paddingTop: \"30px\" }}\n                >\n                    {Math.round(currentWeather.temperature - 273)}&deg;C\n                </Typography>\n                <Typography\n                    variant=\"subtitle2\"\n                    className=\"atmospheric-conditions\"\n                    color=\"textSecondary\"\n                    gutterBottom\n                    style={{ paddingTop: \"40px\" }}\n                >\n                    <span\n                        className={`${strongWind} ${classes.wi} ${classes.atmospheric}`}\n                    ></span>\n                    {currentWeather.wind_speed} km/h Winds{\" \"}\n                    <span\n                        className={`${humidity} ${classes.wi} ${classes.atmospheric}`}\n                    ></span>\n                    {currentWeather.humidity}% Humidity\n                </Typography>\n                <Typography\n                    className={`${classes.recommendation} recommendation`}\n                    color=\"textPrimary\"\n                    gutterBottom\n                >\n                    {recommendation}\n                </Typography>\n                <Divider variant=\"middle\" />\n                <Forecast forecast={forecast} />\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default WeatherCard;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid, Container } from \"@material-ui/core\";\nimport WeatherCard from \"./WeatherCard\";\n\nconst useStyles = makeStyles((theme) => ({\n    layout: {\n        marginTop: \"20px\",\n    },\n}));\n\nconst AppLayout = props => {\n    const classes = useStyles();\n    const { currentWeather, forecast, icon, recommendation } = props;\n\n    return (\n        <Container className={classes.layout}>\n            <Grid container spacing={3}>\n                <Grid item xs={12}>\n                    <WeatherCard\n                        currentWeather={currentWeather}\n                        forecast={forecast}\n                        icon={icon}\n                        recommendation={recommendation}\n                    />\n                </Grid>\n            </Grid>\n        </Container>\n    );\n};\n\nexport default AppLayout;\n","import React, { useEffect, useState } from \"react\";\nimport {\n    CircularProgress,\n    FormControl,\n    Grid,\n    Input,\n    InputAdornment,\n    InputLabel,\n    Tooltip,\n    Typography,\n} from \"@material-ui/core\";\nimport Search from \"@material-ui/icons/Search\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport useDebounce from \"../use-debounce\";\n\nconst useStyles = makeStyles((theme) => ({\n    error: {\n        color: \"red\",\n        padding: \"10px\",\n    },\n    search: {\n        marginTop: \"10px\",\n    },\n}));\n\nconst WeatherSearch = props => {\n    const classes = useStyles();\n    const { error, onCityChange } = props;\n    const [searchTerm, setSearchTerm] = useState(\"\");\n    const [isSearching, setSearching] = useState(false);\n    const debouncedSearchTerm = useDebounce(searchTerm, 1000);\n    const hasError = error ? true : false;\n\n    const handleSearch = (event) => {\n        setSearching(true);\n        setSearchTerm(event.target.value);\n    };\n\n    useEffect(() => {\n        if (debouncedSearchTerm) {\n            onCityChange(debouncedSearchTerm);\n            setSearching(false);\n        }\n    }, [onCityChange, debouncedSearchTerm, isSearching]);\n\n    return (\n        <div className={classes.search}>\n            <Grid container alignItems=\"flex-end\">\n                <Grid item xs={12} style={{ textAlign: \"center\" }}>\n                    <FormControl>\n                        <InputLabel htmlFor=\"search-city\">\n                            Enter city name\n                        </InputLabel>\n                        <Input\n                            id=\"search-city\"\n                            role=\"search\"\n                            type=\"text\"\n                            error={hasError}\n                            onChange={handleSearch}\n                            startAdornment={\n                                <InputAdornment position=\"start\">\n                                    <Tooltip title=\"Optional: Enter a two-letter country code after the city name to make the search more precise. For example, London, GB.\">\n                                        <Search />\n                                    </Tooltip>\n                                </InputAdornment>\n                            }\n                            endAdornment={\n                                isSearching && (\n                                    <InputAdornment position=\"end\">\n                                        <CircularProgress size={20} />\n                                    </InputAdornment>\n                                )\n                            }\n                        />\n                        {error && (\n                            <Typography className={classes.error}>\n                                {error}\n                            </Typography>\n                        )}\n                    </FormControl>\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n\nexport default WeatherSearch;\n","import { useState, useEffect } from \"react\";\n\n//NOTE: Our Custom hook\nexport default function useDebounce(value, delay) {\n    //NOTE: State and setters for debounced value\n    const [debouncedValue, setDebouncedValue] = useState(value);\n\n    useEffect(\n        () => {\n            //NOTE: Set debouncedValue to value (passed in) after the specified delay\n            const handler = setTimeout(() => {\n                setDebouncedValue(value);\n            }, delay);\n\n            //NOTE: Return a cleanup function that will be called every time ...\n            // ... useEffect is re-called. useEffect will only be re-called ...\n            // ... if value changes (see the inputs array below).\n            // This is how we prevent debouncedValue from changing if value is ...\n            // ... changed within the delay period. Timeout gets cleared and restarted.\n            // To put it in context, if the user is typing within our app's ...\n            // ... search box, we don't want the debouncedValue to update until ...\n            // ... they've stopped typing for more than 500ms.\n            return () => {\n                clearTimeout(handler);\n            };\n        },\n        //NOTE: Only re-call effect if value changes\n        [delay, value]\n    );\n\n    return debouncedValue;\n}\n","import React from \"react\";\n\nimport Weather from \"./Weather\";\nimport WeatherSearch from \"./WeatherSearch\";\n\nimport * as weatherIcons from \"../icons\";\nimport * as recommendations from \"../recommendations\";\n\nconst AppLayout = props => {\n    const { city, currentWeather, forecast, onCityChange, error } = props;\n\n    if (currentWeather && forecast) {\n        const prefix = \"wi wi-\";\n\n        const icon = prefix + weatherIcons.default[currentWeather.icon_id].icon;\n        const recommendation =\n            recommendations.default[currentWeather.icon_id].recommendation;\n\n        return (\n            <>\n                <WeatherSearch\n                    city={city}\n                    onCityChange={onCityChange}\n                    error={error}\n                />\n                <Weather\n                    currentWeather={currentWeather}\n                    forecast={forecast}\n                    icon={icon}\n                    recommendation={recommendation}\n                    error={error}\n                />\n            </>\n        );\n    }\n};\n\nexport default AppLayout;\n","import { useState, useEffect } from \"react\";\nimport { createMuiTheme, Container, ThemeProvider } from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport AppLayout from \"./AppLayout\";\n\n//NOTE: set the google api key in .env file, and restart the yarn start, then remove this comment\n\nconst mapDataToWeatherInterface = (data) => {\n    const mapped = {\n        city: data.name,\n        country: data.sys.country,\n        date: data.dt * 1000,\n        humidity: data.main.humidity,\n        icon_id: data.weather[0].id,\n        temperature: data.main.temp,\n        description: data.weather[0].description,\n        wind_speed: Math.round(data.wind.speed * 3.6),\n    };\n\n    if (data.dt_txt) {\n        mapped.dt_txt = data.dt_txt;\n    }\n\n    if (data.weather[0].icon) {\n        mapped.icon = data.weather[0].icon;\n    }\n\n    if (data.main.temp_min && data.main.temp_max) {\n        mapped.max = data.main.temp_max;\n        mapped.min = data.main.temp_min;\n    }\n\n    Object.keys(mapped).forEach(\n        (key) => mapped[key] === undefined && delete data[key]\n    );\n\n    return mapped;\n};\n\nconst handleResponse = (response) => {\n    if (response.ok) {\n        return response.json();\n    } else {\n        throw new Error(\n            \"Error: Location \" + response.statusText.toLowerCase()\n        );\n    }\n};\n\nconst getWeather = (city) =>\n    fetch(\n        `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${process.env.REACT_APP_APIKEY}`\n    )\n        .then(res => handleResponse(res))\n        .then(weather => {\n            if (Object.entries(weather).length) {\n                const mappedData = mapDataToWeatherInterface(weather);\n                return mappedData;\n            }\n        });\n\nconst getForecast = (city) =>\n    fetch(\n        `https://api.openweathermap.org/data/2.5/forecast?q=${city}&units=metric&APPID=${process.env.REACT_APP_APIKEY}`\n    )\n        .then(res => handleResponse(res))\n        .then(result => {\n            if (Object.entries(result).length) {\n                const forecast = [];\n                for (let i = 0; i < result.list.length; i += 8) {\n                    forecast.push(\n                        mapDataToWeatherInterface(result.list[i + 4])\n                    );\n                }\n                return forecast;\n            }\n        });\n\nconst theme = createMuiTheme({\n    typography: {\n        fontFamily: [\n            \"Inter\",\n            \"-apple-system\",\n            \"BlinkMacSystemFont\",\n            '\"Helvetica Neue\"',\n            \"Arial\",\n            \"sans-serif\",\n            '\"Apple Color Emoji\"',\n            '\"Segoe UI Emoji\"',\n            '\"Segoe UI Symbol\"',\n        ].join(\",\"),\n        fontSize: 14,\n        h5: {\n            fontWeight: 600,\n        },\n    },\n});\n\nconst App = () => {\n    const [city, setCity] = useState(\"Ranchi\");\n    const [error, setError] = useState(null);\n    const [currentWeather, setCurrentWeather] = useState(null);\n    const [forecast, setForecast] = useState([]);\n\n    useEffect(() => {\n        getWeather(city)\n            .then((weather) => {\n                setCurrentWeather(weather);\n                setError(null);\n            })\n            .catch(err => setError(err.message));\n\n        getForecast(city)\n            .then(data => {\n                setForecast(data);\n                setError(null);\n            })\n            .catch(err => setError(err.message));\n    }, [city]);\n\n    if (\n        (currentWeather && Object.keys(currentWeather).length) ||\n        (forecast && Object.keys(forecast).length)\n    ) {\n        return (\n            <ThemeProvider theme={theme}>\n                <CssBaseline />\n                <Container maxWidth=\"sm\">\n                    <AppLayout\n                        city={city}\n                        currentWeather={currentWeather}\n                        forecast={forecast}\n                        onCityChange={setCity}\n                        error={error}\n                    />\n                </Container>\n            </ThemeProvider>\n        );\n    } else {\n        return (\n            <ThemeProvider theme={theme}>\n                <CssBaseline />\n                <Container maxWidth=\"sm\" style={{ height: \"100vh\", display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"center\" }}>\n                    <CircularProgress color={error ? \"secondary\" : \"primary\"} />\n                    {error ? <p>{error}</p> : \"\"}\n                </Container>\n            </ThemeProvider>\n        );\n    }\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}